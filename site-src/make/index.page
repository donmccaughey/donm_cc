.page links Make
.subtitle A Tool for Building Software

Make is old. It was
[first released](https://en.wikipedia.org/wiki/Make_(software)) in 1977.  It's
ubiquitous.  Make is a
[standard](https://pubs.opengroup.org/onlinepubs/9699919799/utilities/make.html)
development tool on Unix, Linux and POSIX systems.  Make is not easy to use.
It has many well-known warts and pitfalls.  The things a beginner wants to do
with Make aren't the things that Make wants you to do.

Nevertheless, Make has survived for forty years because it is often good
enough.  If you develop software, particularly if you work in C or C++, you
will encounter a makefile sooner or later.

When you truly realize that Make is a _declarative_ language for specifying a
[directed acyclic graph](https://en.wikipedia.org/wiki/Directed_acyclic_graph),
where the vertices are files and the edges are build scripts, then you can use
Make effectively.  Even after many years, I still sometimes forget this in both
obvious and subtle ways while using Make.

.section links Books

.link book Managing Projects with GNU Make
.asin B0026OR2RW
.author Robert Mecklenburg
.date 2004

.link book The GNU Make Book
.url https://nostarch.com/gnumake
.author John Graham-Cumming
.date 2015

.link book The GNU Make Manual
.url https://www.gnu.org/software/make/manual/html_node/index.html
.date 2016

.section links Articles

.link blog Notes for new Make users
.url http://gromnitsky.users.sourceforge.net/articles/notes-for-new-make-users/
.author Alexander Gromnitsky
.date 2019-03-09

.link blog make.mad-scientist.net
.url http://make.mad-scientist.net
.author Paul D Smith
.date 2017-07-30

.link blog Notes on Writing Makefiles
.url http://eigenstate.org/notes/makefiles
.author Ori Bernstein

.link blog Self-Documented Makefile
.url http://marmelab.com/blog/2016/02/29/auto-documented-makefile.html
.author Fran√ßois Zaninotto
.date 2016-02-29

.link blog A Tutorial on Portable Makefiles
.url https://nullprogram.com/blog/2017/08/20/
.author Chris Wellons
.date 2017-08-20
